import { guidAsBase64 } from "@/utils/misc";
import { reactive } from "vue";

export interface INote {
  message: string;
  type?: string;
}

const notifications = reactive(new Map<string, INote>());

/**
 * @returns {string} `id` of new notification, either autogenerated or consumer provided.
 */
function addNotification(note: INote, timeoutMs?: number, id?: string): string {
  const _id = String(id ?? guidAsBase64());

  note.type ??= "info";

  notifications.set(_id, note);

  timeoutMs && setTimeout(() => removeNotification(_id), timeoutMs);

  return _id;
}

function removeNotification(id: string | number) {
  notifications.delete(String(id));
}

export default function useNotifications() {
  return {
    addNotification,
    removeNotification,
    notifications,
  };
}
